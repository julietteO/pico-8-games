pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- picolele uses the same layout as ordinary tabs
-- █▥░➡️⧗▤⬆️☉🅾️◆…★⬇️✽●♥웃⌂⬅️😐∧❎🐱ˇ▒♪★
-- press a to select note on string (also plays it)
-- press b to play current chord

-- ui : save chord, delete chord, play track


-- features ideas
---- precharged tracks (ex cocoon)
---- save track
---- sfx : notes should be speed 16, with fade out effect
---- display current chord name
---- display current note name
---- play gcea when opening user guide

---- notes reminder
-- a2(9),   a2#(10),    b2(11),     c2(12),     c2#(13),    d2(14),     d2#(15),    e2(16),     f2(17),     f2#(18),    g2(19);
-- e1(4),   f1(5),      f1#(6),     g1(7),      g1#(8),     a2(9),      a2#(10),    b2(11),     c2(12),     c2#(13),    d2(14);
-- c1(0),   c1#(1),     d1(2),      d1#(3),     e1(4),      f1(5),      f1#(6),     g1(7),      g1#(8),     a2(9),      a2#(10);
-- g1(7),   g1#(8),     a2(9),      a2#(10),    b2(11),     c2(12),     c2#(13),    d2(14),     d2#(15),    e2(16),     f2(17);


-- coordinates reminders
-- for -1 notes, x is 4
-- x rows are 4, 13, 24, 39, 52, 64, 75, 85, 95, 105, 115, 123 
-- y lines are : 8, 24, 40, 56


is_dev=false
free_cursor={
    x=0,
    y=0
}
function update_dev()
    if btnp(0) then
		if free_cursor.x>0 then free_cursor.x-=1 end
	end
	if btnp(1) then
		if free_cursor.x<127 then free_cursor.x+=1 end
	end
	if btnp(2) then
		if free_cursor.y>0 then free_cursor.y-=1 end
	end
	if btnp(3) then
		if free_cursor.y<127 then free_cursor.y+=1 end
	end
end

function draw_dev()
    circfill(free_cursor.x, free_cursor.y, 1, 8)
    print("x="..free_cursor.x..", y="..free_cursor.y, 0,120,7)
end

-- current selected chord on fretboard
current_chord={1,1,1,1}

-- see cursor_positions table
-- 1-indexed
-- for col, 0 value is for no note
current_cursor_position={
    row=1,
    col=1
}

current_track_position=0
on_track=false

-- ui vars
is_guide=false
is_tracks_menu=false

-- track vars
-- track={{1,1,1,1}, {1,2,1,3}, {1,1,1,1},{1,1,1,1}, {1,1,1,4}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,2,1,3}, {1,1,1,1},{1,1,1,1}, {1,1,1,4}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1},{1,1,1,1}, {1,1,1,1}, {1,1,1,1}}
track={}

-- fretboard vars
nbfrets=11
cols_x={4, 13, 24, 39, 52, 64, 75, 85, 95, 105, 115, 123 }
rows_y={8, 24, 40, 56}
pos_sfx={
    { 9,10,11,12,13,14,15,16,17,18,19},
    { 4, 5, 6, 7, 8, 9,10,11,12,13,14},
    { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10},
    { 7, 8, 9,10,11,12,13,14,15,16,17},
}

-- precharged tracks
precharged_tracks={
    {
        title="chupee",
        track={{3,4,3,1},{3,4,5,1},{3,3,3,5},{4,3,3,3}}
    },
    {
        title="over the rainbow",
        track={}
    },
}
precharged_tracks_cursor_index=1

function _init()
	menuitem(1, "user guide", function() is_guide=true is_tracks_menu=false end)
	menuitem(2, "tracks menu", function() is_tracks_menu=true is_guide=false end)
end

function _update()
    if is_dev then 
        update_dev() 
        return
    end

    if btnp(0) then move_cursor(-1,0)
    elseif btnp(1) then move_cursor(1,0)
    elseif btnp(2) then move_cursor(0,-1)
    elseif btnp(3) then move_cursor(0,1)
    end

    -- handle actions on fretboard
    if on_fretboard() then
        if btn(4) then
            play_current_chord()
        else
            stop_sfx()
            if btnp(5) then
                save_current_chord()
            end
        end
    elseif on_track then
        if btn(4) then
            play_chord(track[current_track_position+1])
        else
            stop_sfx()
            if btnp(5) then
                delete_chord(current_track_position+1)
            end
        end
    end

    if is_guide and btnp(4) then 
        is_guide=false
    end

    if is_tracks_menu and btnp(4) then 
        track=precharged_tracks[precharged_tracks_cursor_index].track
        is_tracks_menu=false
    end
    if is_tracks_menu and btnp(5) then 
        is_tracks_menu=false
    end
end

function _draw()
    cls()
    rectfill(0,64,128,128,5)
    rectfill(0,64,128,72,0)
    print('picolele ♪', 1, 65, 5)
    map(0, 0, 0, 0, 16, 16) 
    
    if is_dev then 
        draw_dev() 
        return
    end

    -- display user user guide
    if is_guide then
        draw_guide()
    elseif is_tracks_menu then
        draw_tracks_menu()
    else 
        draw_current_chord()
        draw_cursor()
        draw_track()
    end
end

-- moves cursor if possible
function move_cursor(coldiff, rowdiff) 
    
    -- we move cursor only if possible
    -- todo allow navigation in ui below 
    if on_track then 
        if current_track_position==0 and coldiff<0 then return end
        if coldiff != 0 then
            -- can't go further than the track
            if current_track_position+1 == #track and coldiff>0 then return end
            
            current_track_position += coldiff
        elseif rowdiff != 0 then
            -- if on track first line, go to fretboard
            if current_track_position<14 and rowdiff<0 then
                on_track=false
                current_track_position=0
                return
            end
            if current_track_position>=14 and rowdiff<0 then
                current_track_position-=14 
                return
            end
            if current_track_position+14 <= #track and rowdiff>0 then
                current_track_position+=14
                return
            end 
        end
    elseif on_fretboard() then
        if current_cursor_position.row==4 and rowdiff>0 then 
            if #track>0 then
                on_track=true 
            end
            return
        end
        if current_cursor_position.row==1 and rowdiff<0 then return end
        -- on strings, we allow -1 col value to play silent note
        if current_cursor_position.col==0 and coldiff<0 then return end
        if current_cursor_position.col==nbfrets and coldiff>0 then return end
        -- todo add restrictions when on ui row (row number 4)
        
        current_cursor_position.row+=rowdiff 
        current_cursor_position.col+=coldiff
        
        current_chord[current_cursor_position.row]=current_cursor_position.col
    elseif is_tracks_menu then
        if rowdiff == 0 then return end
        
        if precharged_tracks_cursor_index == 1 and rowdiff<0 then return end
        if precharged_tracks_cursor_index == #precharged_tracks and rowdiff>1 then return end
        
        precharged_tracks_cursor_index+=rowdiff
    else
    end

    -- play sound if cursor on note
    if on_fretboard() and current_cursor_position.col>0 then
        sfx(pos_sfx[current_cursor_position.row][current_cursor_position.col])
    end
end

function draw_cursor()
    local cursor_coord_x = cols_x[current_cursor_position.col+1]
    local cursor_coord_y = rows_y[current_cursor_position.row]
    if on_track then return end
    if current_cursor_position.row <=4 then
        
        if current_cursor_position.col == 0 then cursor_shape="x"
        else cursor_shape=current_cursor_position.col-1 end

        centerdiff = 0
        if cursor_shape==10 then centerdiff=-2 end

        circfill(cursor_coord_x+1, cursor_coord_y, 4, 12)
        print(cursor_shape, cursor_coord_x+centerdiff, cursor_coord_y-2, 0)
    else
        circ(cursor_coord_x,cursor_coord_y, 5)
    end
end

function draw_current_chord()
    for i=1,4 do
        --print(current_chord[i],(0+8*i), 120)
        local coord_x = cols_x[current_chord[i]+1]
        local coord_y = rows_y[i]
        circfill(coord_x+1, coord_y, 4, 12)
    end
end

function draw_chord(chord)
    for i=1,4 do
        local cursor_coord_x = cols_x[chord[i]+1]
        local cursor_coord_y = rows_y[i]
        circfill(cursor_coord_x+1, cursor_coord_y, 4, 12)
    end
end

function draw_track()
    local i=0
    local j=0
    for chord in all(track) do
        if i==14 then
            j+=1
            i=0
        end
        circfill(11+(8*i), 84+(8*j),2,7)
        i+=1
    end
    if on_track then
        current_chord = {
            track[current_track_position+1][1],
            track[current_track_position+1][2],
            track[current_track_position+1][3],
            track[current_track_position+1][4],
        }
        current_cursor_position.col=track[current_track_position+1][4]
        local track_line=(current_track_position-current_track_position%14)/14
        circfill(11+(8*(current_track_position%14)), 84+(8*track_line),2,12)
    else
        if i==14 then
            j+=1
            i=0
        end
        circ(11+(8*i), 84+(8*j),2,12)
    end
end

function draw_guide()
    cls()
  
    print("♪♪ user guide ♪♪",32,2,7)
    print("on fretboard",10,30,7)
    print("░ press 🅾️ to play chord",15,40,7)
    print("░ press ❎ to save chord",15,50,7)
    print("on track",10,70,7)
    print("░ press 🅾️ to play chord",15,80,7)   
    print("░ press ❎ to remove chord",15,90,7)
    print("press 🅾️ to resume", 55, 120,7)
end

function draw_tracks_menu()
    cls()

    print("♪♪ tracks ♪♪",34,2,7)

    local i=1
    local y
    for precharged_track in all (precharged_tracks) do
        y=20+10*i
        print(precharged_track.title, 25,y,7)

        if i==precharged_tracks_cursor_index then
            print("░", 10,y,7)
        end
        i+=1
    end

    print("🅾️:select - ❎:cancel", 45, 120,7)

end


-- plays note corresponding to current cursor position
function play_cursor_note()
    -- return if not on a string position
    if current_cursor_position.row <= 4 then return end
    if current_cursor_position.col == 0 then return end
    sfx(pos_sfx[current_cursor_position.row][current_cursor_position.col], current_cursor_position.row)
end

-- plays current chord
function play_current_chord()
    play_chord(current_chord)
end

-- chord is an array of 4 ints 
function play_chord(chord) 
    for i=1,4 do
        if chord[i] != 0 then
            sfx(pos_sfx[i][(chord[i])],i)
        end
    end
end


-- save current chord to track
function save_current_chord()
    local chord = {
        current_chord[1],
        current_chord[2],
        current_chord[3],
        current_chord[4],
    }

    add(track, chord)
end

function delete_chord(index)
    length=#track
    limit=length

    new_track={}
    for i=1,limit do
        if i != index then
            add(new_track, track[i])
        end
    end
    if current_track_position==limit-1 then current_track_position-=1 end
    track = new_track
end

function stop_sfx()
    sfx(-1,0)
    sfx(-1,1)
    sfx(-1,2)
    sfx(-1,3)
end



function on_fretboard()
    if on_track or is_guide or is_tracks_menu then return false else return true end
    --return current_cursor_position.row <= 4 and current_cursor_position.col > 0
end 

__gfx__
000000006444444400000000fffff566ffffffff0000000000000000444444440000000044644444000000004444464400000000444464440000000000000000
000000006444444464444444fffff566fffffffffffff566ffffffff444444444444444444644444446444444444464444444644444464444444644400000000
000000006444444464444444fffff566fffffffffffff566ffffffff444444444444444444644444446444444444464444444644444464444444644400000000
000000006444444464444444fffff566fffffffffffff566ffffffff444444444444444444644444446444444444464444444644444464444444644400000000
000000006444444464444444fffff566fffffffffffff566ffffffff444444444444444444644444446444444444464444444644444464444444644400000000
000000006444444464444444fffff566fffffffffffff566ffffffff444444444444444444644444446444444444464444444644444464444444644400000000
000000006444444464444444fffff566fffffffffffff566ffffffff444444444444444444644444446444444444464444444644444464444444644400000000
000000006444444464444444fffff566fffffffffffff566ffffffff444444444444444444644444446444444444464444444644444464444444644400000000
44444464000000004444444600000000333333333333333003333333000000000000000000000000000000000000000000000000000000000000000000000000
44444464444444644444444644444446b3bbbbb3b3bbbbb003bbbbb3000000000000000000000000000000000000000000000000000000000000000000000000
44444464444444644444444644444446b3b333b3b3b333b003b333b3000000000000000000000000000000000000000000000000000000000000000000000000
44444464444444644444444644444446b3b3b3b3b3b3b3b003b3b3b3000000000000000000000000000000000000000000000000000000000000000000000000
44444464444444644444444644444446b3b3b3b3b3b3b3b003b3b3b3000000000000000000000000000000000000000000000000000000000000000000000000
44444464444444644444444644444446b3bbb3b3b3bbb3b003bbb3b3000000000000000000000000000000000000000000000000000000000000000000000000
44444464444444644444444644444446b33333b3b33333b0033333b3000000000000000000000000000000000000000000000000000000000000000000000000
44444464444444644444444644444446bbbbbbbbbbbbbbb00bbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
__map__
04030107010b07090b0701090d10120700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06050208020c080a0c08020a0e11130800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04030107010b07090b0701090d10120700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06050208020c080a0c08020a0e11130800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04030107010b07090b0701090d10120700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06050208020c080a0c08020a0e11130800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04030107010b07090b0701090d10120700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06050208020c080a0c08020a0e11130817000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000001717000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414141414141414141417171700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1500171717171717171717171700001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1500171717171717171717171717171600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1500000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1500000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1500000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414141414141414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010100012405024700247002470024700247002470024700247002470024700247002470024700247002470024700247002470024700247002470024700247002470024700247002470024700247002470024700
010100012505025700257002570025700257002570025700257002570025700257002570025700257002570025700257002570025700257002570025700257002570025700257002570025700257002570025700
010100012605026700267002670026700267002670026700267002670026700267002670026700267002670026700267002670026700267002670026700267002670026700267002670026700267002670026700
010100012705027700277002770027700277002770027700277002770027700277002770027700277002770027700277002770027700277002770027700277002770027700277002770027700277002770027700
010100012805028700287002870028700287002870028700287002870028700287002870028700287002870028700287002870028700287002870028700287002870028700287002870028700287002870028700
010100012905029700297002970029700297002970029700297002970029700297002970029700297002970029700297002970029700297002970029700297002970029700297002970029700297002970029700
010100012a050190001b0001e0001f00021000220002b0002e0003000031000320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010100012b05016000190001a0001c0001d0001e0001e0001f00020000210002200022000230000000024000260002700028000290002a0002b0002c0002c0002e0002f000300003100032000330003400000000
010100012c05014000170001a0001d0001e000210002300025000280002a0002b0002d0002f000310003300000000000000000000000000000000000000000000000000000000000000000000000000000000000
010100012d050120001400016000180001a0001b0001c0001d0001e0001f0001f0002000021000220002200000000000000000000000000000000000000000000000000000000000000000000000000000000000
010100012e0501100014000160001a0001d0002100026000290002e0003100035000380003a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000012f050090000b0000f000110001300016000190001a0001d0001e0002100023000250002600028000290002a0002c0002e0002f0003100000000000000000000000000000000000000000000000000000
01100001300500c00012000190001c00023000270002e00033000380003e0003f000380003a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000013105011000170001b0002000024000290002f00033000370003b0003f0003f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0110000132050180001a0001e00021000240002b0002e00031000360003b0003f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100001330500e00013000170001f0001a0001f0002200026000280002c000300003300037000390003b00000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100001340500e0000c0001000014000190001c0002000025000280002d0002f00034000380003b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100001350500a0000c0001200015000190001e0000000024000290002d00034000390003d0003f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100001360500b0000e0001000013000150001a0001d00022000270002a0002d00033000350003b0003e00000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100001370500a0000d0000e0001000013000170001a0001f0002100025000290002a0002f000320003600000000000000000000000000000000000000000000000000000000000000000000000000000000000
